name: Update yarn dependencies
description: Run `yarn up '*'` and make a PR
branding:
    icon: arrow-up-circle
    color: blue
inputs:
    push-to-repo-token:
        description: a GitHub Personal Access Token capable of pushing to the target repository
        required: true
    commit-user:
        description: the username to use when creating an update commit
        required: true
        default: auto-updater
    commit-email:
        description: the email address to use when creating an update commit, typically "<user>@users.noreply.github.com"
        required: true
    commit-title:
        description: the title to use for the commit
        required: true
        default: Auto-update dependencies and plugins
    primary-branch:
        description: the branch to target updates
        required: true
        default: develop
    working-branch:
        description: the branch from which to submit updates
        required: true
        default: auto/versions
    pr-title:
        description: the title to use for the PR
        required: true
        default: Auto-update dependencies and plugins

runs:
    using: composite
    steps:
        - name: Setup
          shell: bash
          run: yarn install
        - name: Check for updates
          shell: bash
          run: yarn up '*'
        - name: Create branch and commit changes
          shell: bash
          run: |
              # only commit if there are changes
              if [ -z "$(git status --porcelain)" ]; then
                  echo "No updates detected"
                  exit 0
              fi
              git config --local user.name '${{ inputs.commit-user }}'
              git config --local user.email '${{ inputs.commit-email }}'
              git checkout -B "${{ inputs.working-branch }}"
              git add .
              git commit -m '${{ inputs.commit-title }}'

              # only push changes if different
              if [ -n "$(git ls-remote --exit-code origin '${{ inputs.working-branch }}')" && -z "$(git diff 'origin/${{ inputs.working-branch }}')" ]; then
                  echo "No new updates since last update proposal"
                  exit 0
              fi
              git push origin -f '${{ inputs.working-branch }}'
              gh pr create -B '${{ inputs.primary-branch }}' --title '${{ inputs.pr-title }}' --body "" || true
          env:
              GITHUB_TOKEN: ${{ inputs.push-to-repo-token }}
